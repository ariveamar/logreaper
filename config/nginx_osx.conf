user  root wheel;
worker_processes  1;

error_log  logs/error.log  debug;

#pid        logs/nginx.pid;

events {
    worker_connections  128;
}


http {
	upstream node {
		server 127.0.0.1:8080;
	}
	upstream webpack {
		server 127.0.0.1:2992;
	}
    upstream access {
        server access.redhat.com:443 max_fails=0 fail_timeout=10s;
    }

    include       mime.types;
    default_type  application/octet-stream;

	log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
	                      '$status $body_bytes_sent "$http_referer" '
	                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  logs/access.log  main;

    keepalive_timeout 65;
	proxy_read_timeout 200;
	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	gzip on;
	gzip_min_length 1000;
	gzip_proxied any;
	gzip_types text/plain text/css text/xml application/x-javascript application/atom+xml application/rss+xml application/json;

	proxy_next_upstream error;

    server {
		listen	80;
        server_name  foo.redhat.com;
        #rewrite        ^ https://$server_name$request_uri? permanent;

		location ~ ^/(chrome_themes|webassets|services|click|suggest)/.*$ {
        	proxy_pass_header Server;
        	proxy_set_header Host "access.redhat.com";
        	proxy_pass https://access;
		}
		location ~ /(webpack-dev-server.js|socket.io|assets\/main.js|_assets).*?$ {
        	proxy_pass_header Server;
        	proxy_set_header Host $http_host;
        	proxy_redirect off;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Scheme $scheme;
        	proxy_pass http://webpack;
        	# Allow websockets proxying
        	proxy_http_version 1.1;
        	proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection "upgrade";
		}
      	location / {
        	proxy_pass_header Server;
        	proxy_set_header Host $http_host;
        	proxy_redirect off;
        	proxy_set_header X-Real-IP $remote_addr;
        	proxy_set_header X-Scheme $scheme;
        	proxy_pass http://node;
        	proxy_http_version 1.1;
        	proxy_set_header Upgrade $http_upgrade;
        	proxy_set_header Connection "upgrade";
		}
    }

	server {
		listen 443;
		server_name foo.redhat.com;
    	rewrite_log on;

		ssl                  on;
		ssl_certificate      server.crt;
		ssl_certificate_key  server.key;
		ssl_session_timeout  5m;
		ssl_protocols  SSLv2 SSLv3 TLSv1;
		ssl_ciphers  HIGH:!aNULL:!MD5;
		ssl_prefer_server_ciphers   on;

		# Define the specific node endpoints, the finall fallback will be the
		location ~ /(webpack-dev-server.js|socket.io|assets\/main.js|_assets).*?$ {
			proxy_pass_header Server;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Scheme $scheme;
			proxy_pass http://webpack;
			# Allow websockets proxying
      	  	proxy_http_version 1.1;
      	  	proxy_set_header Upgrade $http_upgrade;
      	  	proxy_set_header Connection "upgrade";
		}
    	location ~ ^/(chrome_themes|webassets|services|click|suggest)/.*$ {
			proxy_pass_header Server;
			proxy_set_header Host "access.redhat.com";
			proxy_pass https://access;
    	}
		location / {
			proxy_pass_header Server;
			proxy_set_header Host $http_host;
			proxy_redirect off;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Scheme $scheme;
			proxy_pass http://node;
      	  	proxy_http_version 1.1;
      	  	proxy_set_header Upgrade $http_upgrade;
      	  	proxy_set_header Connection "upgrade";
		}
	}
}
